#base on openresty
#nginx conf set
#
#
#user  nobody;
worker_processes  2;
worker_cpu_affinity 01 10;

error_log  /home/foyon/log/ngx_lua_error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx_foyon.pid;


events {
    worker_connections  51200;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #
    #upstream my_redis_node {
    #	    server 127.0.0.1:6379;
    #	    keepalive 1024 single;
    #}

    	#closed the cache
	lua_package_path "/home/foyon/luaMvc/?.lua;;";
    #init_by_lua ' cjson = require "cjson" ';


    server {
        listen       80;
        server_name  localhost;
	
	    lua_code_cache off;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
      
        location = '/hello' {
            set_unescape_uri $person $arg_person;
            set_if_empty $person 'anonymous';
            echo "hello,$person!";		
        }


    	#common api /socket/http ,do not change it!
       location = '/demo/index.lua' {
          content_by_lua_file /home/foyon/luaMvc/index.lua;
       }

   	
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}
